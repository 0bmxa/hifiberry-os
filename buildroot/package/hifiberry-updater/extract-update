#!/bin/bash

UPDATER=/data/updater.tar.gz

if [ ! -f $UPDATER ]; then
 echo "$UPDATER does not exist, aborting"
 exit 1
fi

cd `dirname $0`
INACTIVE=`./partitions | awk '{print $2}'`

echo "Unmounting $INACTIVE..."
umount /newroot 2>/dev/null

echo "Extracting new firmware to $INACTIVE..."
gunzip -c $UPDATER | tar xOf - rootfs.ext2 | dd of=$INACTIVE bs=1048576

echo "Mounting new root file system"
if [ ! -d /newroot ]; then
  mkdir /newroot
fi
                                    
echo "Resizing new root file system"
resize2fs $INACTIVE                 
mount -t ext4 $INACTIVE /newroot    
resize2fs $INACTIVE                 
if [ -f /newroot/resize-me ]; then  
  rm /newroot/resize-me            
fi                                 
VERSION=`cat /newroot/etc/hifiberry.version`

echo "Extracting new kernel"                   
cd /tmp                                        
gunzip -c $UPDATER | tar xf - zImage updater.sh
if [ ! -f zImage ]; then                       
 echo "Could not find new kernel, aborting ..."
 exit 1                                        
else                               
 cp /boot/zImage /boot/zImage.bak  
 mv zImage /boot/zImage 2>/dev/null
fi                                        
                                          
echo "Looking for additional update script"
if [ ! -f updater.sh ]; then                  
 echo "No update script found, continuing..."
else                                      
 chmod +x ./updater.sh
 ./updater.sh         
fi        

sync

echo "Migrating SSH host keys"
cp /etc/ssh/ssh_host* /newroot/etc/ssh

echo "Migrating other configurations"
for i in `cat /opt/hifiberry/etc/config-files`; do
  if [ -f $i ]; then
    DIR=`dirname $i`
    cd $DIR
    if [ ! -d /newroot/$DIR ]; then
      mkdir -p /newroot/$DIR
    fi
    echo $i
    cp $i /newroot/$DIR
  fi
  if [ -d $i ]; then
    DIR=`dirname $i`
    cd $DIR
    if [ ! -d /newroot/$DIR ]; then
      mkdir -p /newroot/$DIR
    fi
    echo "$i"
    cp -r $i /newroot/$DIR
  fi
done

echo "Changing file on FAT partition"
cd /boot
(cd /newroot/boot ; tar cf - *) | tar xvf -
cd /



echo "Unmounting $INACTIVE"
umount $INACTIVE
fsck.ext2 -p -f -v $INACTIVE
                                                               
echo "Switching root file system to inactive partition"        
echo "root=$INACTIVE rootwait console=tty5 systemd.show_status=0 quiet splash" > /boot/cmdline.txt
                                                               
if [ "$1" == "--reboot" ]; then
 echo "Removing updater"
 rm $UPDATER
 echo "Rebooting"
 sync            
 reboot
else
 echo "Version $VERSION installed. You need to reboot to activate it"
fi 

