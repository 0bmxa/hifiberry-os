#!/bin/bash

REBOOTFILE=/tmp/reboot
if [ -f /etc/force_exclusive_audio ]; then
 echo "Forcing exclusive audio mode"
 FORCE_EXCLUSIVE=1
fi

SERVICES="spotify raat mpd shairport-sync squeezelite bluealsa-aplay alsaloop"

samplerate() {
  if [ -f /etc/hifiberry.conf ]; then 
    . /etc/hifiberry.conf
  fi 

  if [ "$SAMPLERATE" == "" ]; then
    SAMPLERATE=$CURRENT_SAMPLERATE
  fi
  if [ "$SAMPLERATE" == "" ]; then
    SAMPLERATE=192000
  fi

  if [ "$PIVERSION" == "0" ]; then
    SAMPLERATE=48000
  fi
}

restart_service() {
 systemctl is-active --quiet $1
 if [ "$?" == "0" ]; then
   echo "Restarting $1"
   systemctl restart $1
 fi
}

check_systemd() {
 SERVICE_ACTIVE=0
 for SERVICE in "$@"; do 
   systemctl is-active --quiet $SERVICE
   if [ "$?" == "0" ]; then
     SERVICE_ACTIVE=1
   fi

   systemctl is-enabled --quiet $SERVICE 
   if [ "$?" == "0" ]; then
     SERVICE_ACTIVE=1
   fi 
   
 done
}

check_exclusive() {
 PLAYERCOUNT=0
 EXCLUSIVE=0
 PLAYERS=""
 for SERVICE in $SERVICES; do
   check_systemd $SERVICE
   if [ "$SERVICE_ACTIVE" == "1" ]; then
     PLAYERCOUNT=$((PLAYERCOUNT + 1))
     PLAYERS="$PLAYERS$SERVICE "
   fi
 done
 if [ $PLAYERCOUNT -lt 2 ]; then
   echo "Enabling exclusive audio"
   EXCLUSIVE=1
 fi
 if [ "$FORCE_EXCLUSIVE" = "1" ]; then 
   echo "Forcing exclusive audio"       
   EXCLUSIVE=1                          
 fi   
}

# Detect Raspberry Pi model
pi_model() {
 modelname=$(tr -d '\0' < /proc/device-tree/model)

 if [[ $modelname == *"3 Model B+"* ]]; then
  PIMODEL="3B+"
  PIVERSION=3
  return
 fi 

 if [[ $modelname == *"3 Model B Plus"* ]]; then
  PIMODEL="3B+"
  PIVERSION=3
  return
 fi 

 if [[ $modelname == *"3 Model B"* ]]; then
  PIMODEL="3B"
  PIVERSION=3
  return
 fi 

 if [[ $modelname == *"4 Model B+"* ]]; then
  PIMODEL="4"
  PIVERSION=4
  return
 fi

 if [[ $modelname == *"Pi Zero W"* ]]; then
  PIMODEL="0w"
  PIVERSION=0
  return
 fi

 PIMODEL="unknown" 
}

fix_asound_hw() {
 if [ "$HW_SHORT" == "" ]; then
  echo "no HiFiBerry sound card detected, not changing /etc/asound.conf"
  return
 fi
 sed -i "s/card\s[0-9]/card\ $HW_SHORT/g" /etc/asound.conf
}

# Find the correct input and output hardware devices
# this is important if additional USB hardware is connected
detect_hw () {
 HW=`aplay -l | grep hifiberry | awk -F: '{print $1}'`
 HW_SHORT=`echo $HW | awk '{print $2}'`
 fix_asound_hw
}

# Find the correct ALSA volume control 
guess_volume_control() {
 # DAC+ and Amp2 use "Digital"
 DIGITAL=`amixer scontrols | grep Digital`
 if [ "$DIGITAL" != "" ]; then
   MIXER_CONTROL=Digital
   return
 fi

 # Amp+ uses "Master"
 # however, as shairport-sync doen't work with this, we'll use softvol
 MASTER=`amixer scontrols | grep Master`
 if [ "$MASTER" != "" ]; then
   MIXER_CONTROL=Softvol
   return
 fi

 # Check if there is a working DSP volume control
 dsptoolkit --timeout=10 get-volume 2 >/dev/null >/dev/null
 if [ $? == 0 ]; then
    MIXER_CONTROL=DSPVolume
    return
 fi

 # There should be at least a Softvol control
 SOFTVOL=`amixer scontrols | grep Softvol`
 if [ "$SOFTVOL" != "" ]; then
   MIXER_CONTROL=Softvol
   return
 fi

 echo "Could not find ALSA volume control, just using softvol"
 MIXER_CONTROL=Softvol
}

# Guess what card is installed"
guess_card() {
 DACPLUSADCPRO=`aplay -l | grep DAC+ | grep ADC | grep Pro`   
 if [ "$DACPLUSADCPRO" != "" ]; then                          
   CARD="DAC+ ADC Pro"                                        
   return                                                     
 fi                                                           
                                                              
 DACPLUSADC=`aplay -l | grep DAC+ | grep ADC`                 
 if [ "$DACPLUSADC" != "" ]; then                             
   CARD="DAC+ ADC"                                            
   return                                                     
 fi                                                           
        
 DACPRO=`aplay -l | grep DAC+ | grep Pro`
 if [ "$DACPRO" != "" ]; then
   CARD="DAC+ Pro"
   return
 fi

 DACDSP=`aplay -l | grep DAC+DSP`
 if [ "$DACDSP" != "" ]; then
   CARD="DAC+ DSP"
   return
 fi

 DAC=`aplay -l | grep DAC+`
 if [ "$DAC" != "" ]; then
   CARD="DAC+/Amp2"
    return
 fi

 AMPPLUS=`aplay -l | grep AMP`
 if [ "$AMPPLUS" != "" ]; then
   CARD="Amp+"
   return
 fi

 DIGIPRO=`aplay -l | grep Digi+ | grep Pro`
 if [ "$DIGIPRO" != "" ]; then
   CARD="Digi+ Pro"
   return
 fi

 DIGI=`aplay -l | grep Digi+`
 if [ "$DIGI" != "" ]; then
   CARD="Digi+"
    return
 fi

 CLKGEN=`i2cget -y 1 0x60 2 2>/dev/null`
 if [ "$CLKGEN" == "0x03" ]; then
    CARD="Beocreate 4-Channel Amplifier"
    return
 fi

 REG1=`dsptoolkit --timeout=10 read-reg 0xf003` # expected 00 01
 REG2=`dsptoolkit --timeout=10 read-reg 0xf402` # expected 00 01
 REG3=`dsptoolkit --timeout=10 read-reg 0xc000` # expected 00 00
 if [ "$REG1$REG2$REG3" == "00 01 00 01 00 00 " ]; then
    CARD="DAC+ DSP"
    return
 fi

 # If nothing was detected, it might be a DAC+ Light/Zero or MiniAmp"
 CARD="DAC+ Zero/Light/MiniAmp"
}

# Check if card can record
can_record() {
 ADC=`arecord -l | grep -i hifiberry`
 if [ "$ADC" != "" ]; then
   CAN_RECORD=1
   return
 fi
}

# Calculate system names
system_name() {
 if [ -f /etc/systemname ]; then
   SYSNAME=`cat /etc/systemname`
 else
   SYSNAME=HiFiBerry
   echo $SYSNAME > /etc/systemname
 fi

 SYSNAME_NO_SPACES=`echo $SYSNAME | sed s/\ /-/g`
 SYSNAME_SED_SPACES=`echo $SYSNAME | sed 's/\ /\\\\\\ /g'` 
}

# Reconfigure SpotifyD
reconfigure_spotify() {
 RESTART=0
 if [ "$MIXER_CONTROL" != "$CURRENT_MIXER_CONTROL" ]; then
  sed -i s/mixer\ =.*/mixer\ =\ $MIXER_CONTROL/ /etc/spotifyd.conf 
  RESTART=1
  echo " updated mixer"
 fi

 if [ "$SYSNAME" != "$CURRENT_SYSNAME" ]; then
  sed -i s/device_name\ =.*/device_name\ =\ $SYSNAME_NO_SPACES/ /etc/spotifyd.conf
  RESTART=1
  echo " updated system name"
 fi

 if [ "$RESTART" == "1" ]; then
  restart_service spotify
 fi
}

# Reconfigure Shairport-sync
reconfigure_shairport() {
 RESTART=0
 if [ "$MIXER_CONTROL" != "$CURRENT_MIXER_CONTROL" ]; then
  sed -i s/mixer_control_name\ =\ .*/mixer_control_name\ =\ \"$MIXER_CONTROL\"\;/ /etc/shairport-sync.conf 
  RESTART=1
  echo " updated mixer"
 fi
 if [ "$SYSNAME" != "$CURRENT_SYSNAME" ]; then
  sed -i s/\ name\ =\ .*/\ name\ =\ \"$SYSNAME_NO_SPACES\"\;/ /etc/shairport-sync.conf  
  RESTART=1
  echo " updated system name"
 fi
 if [ "$RESTART" == "1" ]; then
  restart_service shairport-sync
 fi
}

# Reconfigure AudioControl2
reconfigure_audiocontrol2() {
 if [ "$MIXER_CONTROL" != "$CURRENT_MIXER_CONTROL" ]; then
  sed -i s/mixer_control.*=.*/mixer_control=$MIXER_CONTROL/ /etc/audiocontrol2.conf
  restart_service audiocontrol2
  echo " updated mixer"
 fi
}


# Reconfigure Bluetooth
reconfigure_bluetooth() {
 if [ "$PIVERSION" == "3B" ]; then
   systemctl disable --now btuart.service bluetooth.service bluealsa.service bluealsa-aplay.service a2dp-agent.service
   echo " disabled on Pi3"
 fi 
 if [ "$SYSNAME" != "$CURRENT_SYSNAME" ]; then
  sed -i "s/Name\ =\ .*/Name\ =\ $SYSNAME_SED_SPACES/" /etc/bluetooth/main.conf
  restart_service bluetooth.service
  echo " updated system name"
 fi
}

# Reconfigure squeezelite
reconfigure_squeezelite() {
 if [ "$SYSNAME" != "$CURRENT_SYSNAME" ]; then
  echo $SYSNAME > /var/squeezelite/squeezelite.name
  restart_service squeezelite
  echo " updated system name"
 fi
}

# Reconfigure MPD
reconfigure_mpd() {
 if [ "$MIXER_CONTROL" != "$CURRENT_MIXER_CONTROL" ]; then
  sed -i s/mixer_control\ .*/mixer_control\ \ \ \"$MIXER_CONTROL\"/ /etc/mpd.conf
  restart_service mpd
  echo " updated mixer"
 fi
}                 

# Reconfigure "can_record"
reconfigure_recording() {
 if [ ! -d /etc/hifiberry ]; then
   mkdir -p /etc/hifiberry
 fi
 if [ "$CAN_RECORD" != "" ]; then
   touch /etc/hifiberry/can_record
 else 
   systemctl disable alsaloop
   if [ -f /etc/hifiberry/can_record ]; then
     rm /etc/hifiberry/can_record
   fi
 fi
}

# Reconfigure Beocreate 
reconfigure_beocreate() {
 # Update card type
 if [ "$CARD" != "$CURRENT_CARD" ]; then
  /bin/node /opt/beocreate/beo-system/configure.js system cardType "$CARD"
  echo " updated card type"
 fi

 # Update mixer control
 if [ "$MIXER_CONTROL" != "$CURRENT_MIXER_CONTROL" ]; then
  /bin/node /opt/beocreate/beo-system/configure.js sound mixer $MIXER_CONTROL
  echo " updated mixer"
 fi 
}

# Reconfigure exclusive mode
reconfigure_exclusive() {
 if [ "$EXCLUSIVE" = "$CURRENT_EXCLUSIVE" ]; then
  return
 fi

 if [ "$EXCLUSIVE" = "1" ]; then
  cp /etc/asound.conf.exclusive /etc/asound.conf
 else
  if [ "$PIMODEL" = "0" ]; then
   cp /etc/asound.conf.dmix_softvol.lite /etc/asound.conf
  else
   cp /etc/asound.conf.dmix_softvol /etc/asound.conf
  fi
 fi
 fix_asound_hw

 for SERVICE in $SERVICES; do
  restart_service $SERVICE
 done
}

# Change sample rate
reconfigure_samplerate() {
 if [ "$SAMPLERATE" == "$CURRENT_SAMPLERATE" ]; then
  return
 fi
 sed -i "s/rate\s.[1-9].*/rate\ $SAMPLERATE/g" /etc/asound.conf
 echo " updated asound.conf"
  
 for SERVICE in $SERVICES; do
  restart_service $SERVICE
 done
}


MIXER_CONTROL=""
CARD="unknown"

if [ -f /etc/hifiberry.state ]; then 
. /etc/hifiberry.state
fi

pi_model
detect_hw
guess_volume_control
guess_card
can_record
system_name
check_exclusive
samplerate

CARD_SED_SPACES=`echo $CARD | sed 's/\ /\\\\\\ /g' | sed 's/\//\\\\\\//g'` 


if [ "$CURRENT_MIXER_CONTROL" != "$MIXER_CONTROL" ] || \
   [ "$CURRENT_CARD" != "$CARD" ] || \
   [ "$CURRENT_SYSNAME" != "$SYSNAME" ] || \
   [ "$CURRENT_PIMODEL" != "$PIMODEL" ] || \
   [ "$CURRENT_PLAYERS" != "$PLAYERS" ] || \
   [ "$CURRENT_SAMPLERATE" != "$SAMPLERATE" ] || \
   [ "$CURRENT_EXCLUSIVE" != "$EXCLUSIVE" ] || \
   [ "$CURRENT_HW" != "$HW" ] || \
    [ 1 != 1 ]; then
 echo "Sound card settings have been changed, reconfiguring..."
else
 echo "Nothing changed, exiting..."
 exit
fi

echo "Applying settings: "
echo " Players: $PLAYERS (was $CURRENT_PLAYERS)"
echo " Exclusive mode: $EXCLUSIVE (was $CURRENT_EXCLUSIVE)"
echo " Raspberry Pi model: $PIMODEL"
echo " System name: $SYSNAME (was $CURRENT_SYSNAME)"
echo " Sound card: $CARD (was $CURRENT_CARD)"
echo " HW device: $HW (was $CURRENT_HW)"
echo " ALSA mixer control: $MIXER_CONTROL (was $CURRENT_MIXER_CONTROL)"
echo " Recording: $CAN_RECORD (was $CURRENT_CAN_RECORD)"
echo " Samplerate: ${SAMPLERATE}Hz (was $CURRENT_SAMPLERATE)"
echo

echo "Reconfiguring exclusive mode"
reconfigure_exclusive
echo "Reconfiguring Spotifyd"
reconfigure_spotify
echo "Reconfiguring Shairport-sync"
reconfigure_shairport
echo "Reconfiguring Bluetooth"
reconfigure_bluetooth
echo "Reconfiguring squeezelite"
reconfigure_squeezelite
echo "Reconfiguring MPD"
reconfigure_mpd
echo "Reconfigure recording"
reconfigure_recording
echo "Reconfigure AudioControl2"
reconfigure_audiocontrol2
echo "Reconfiguring Beocreate software"
reconfigure_beocreate
echo "Reconfiguring sample rate"
reconfigure_samplerate

echo "Saving settings to /etc/hifiberry.state"
echo "CURRENT_PIMODEL=$PIMODEL" > /etc/hifiberry.state
echo "CURRENT_MIXER_CONTROL=\"$MIXER_CONTROL\"" >> /etc/hifiberry.state
echo "CURRENT_CARD=\"$CARD\"" >> /etc/hifiberry.state
echo "CURRENT_HW=\"$HW\"" >> /etc/hifiberry.state
echo "CURRENT_HW_SHORT=$HW_SHORT" >> /etc/hifiberry.state
echo "CURRENT_SYSNAME=\"$SYSNAME\"" >> /etc/hifiberry.state 
echo "CURRENT_PLAYERS=\"$PLAYERS\"" >> /etc/hifiberry.state
echo "CURRENT_EXCLUSIVE=$EXCLUSIVE" >> /etc/hifiberry.state
echo "CURRENT_SAMPLERATE=$SAMPLERATE" >> /etc/hifiberry.state
echo "PIVERSION=$PIVERSION" >> /etc/hifiberry.state

if [ "$1" == "--reboot" ]; then
  echo "System configuration changed" >> $REBOOTFILE
fi

